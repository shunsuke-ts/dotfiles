[[plugins]]
repo = 'Shougo/deoplete.nvim'
depends = ['context_filetype.vim']
on_event = 'InsertCharPre'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  call Source('rc/plugins/deoplete.nvim.rc.vim')
'''

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = ['snippet']
hook_source = '''
  " Plugin key-mappings.
  imap <C-k>  <Plug>(neosnippet_jump_or_expand)
  smap <C-k>  <Plug>(neosnippet_jump_or_expand)
  xmap <C-k>  <Plug>(neosnippet_expand_target)

  " SuperTab like snippets behavior.
  imap <expr><TAB> neosnippet#expandable() <Bar><bar> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : pumvisible() ? "\<C-n>" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable() <Bar><bar> neosnippet#jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

  " For snippet_complete marker.
  if has('conceal')
  set conceallevel=2 concealcursor=i
  endif

  let g:neosnippet#enable_snipmate_compatibility = 1
  let g:neosnippet#enable_completed_snippet = 1
  let g:neosnippet#expand_word_boundary = 1
  let g:snippets_dir = '~/.vim/snippets/'
  "let g:neosnippet#snippets_directory = $CACHE . '/dein/repos/github.com/Shougo/neosnippet-snippets/neosnippets
'''


[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'Shougo/deoplete-clangx'
depends = ['deoplete.nvim']
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'zchee/deoplete-go'
depends = ['deoplete.nvim']
on_event = 'InsertEnter'
on_ft = ['go']

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = ['deoplete.nvim']
on_ft = ['python']

[[plugins]]
repo='Shougo/neco-vim'
on_ft = ['vim']

[[plugins]]
repo = 'Shougo/neoinclude.vim'
